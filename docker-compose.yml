version: '2'

services:

  # node:
  #   build:
  #     context: ./docker/language/js

  # elixir:
  #   build:
  #     context: ./docker/language/elixir
  #   volumes:
  #     - ./workspace/elixir:/var/www/app
  #   ports:
  #     - "4000:4000"
    # tty: true

  # ruby:
  #   build:
  #     context: ./docker/language/ruby
  #   volumes:
  #     - ./workspace/ruby:/var/www/html
    # tty: true
  app:
    extends:
      file: ./docker/language/${LANGUAGE}/${LANGUAGE}.yml
      service: ${LANGUAGE}
    volumes:
      - ./workspace/${LANGUAGE}:/var/www/app

  nginx:
    build:
      context: ./docker/middleware/nginx
    # volumes_from:
    #   - applications
    ports:
      - "80:80"
    depends_on:
      - app
    volumes:
      - ./docker/middleware/nginx/conf.d/${LANGUAGE}.conf:/etc/nginx/conf.d/default.conf

  mysql:
    build:
      context: ./docker/database/mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      # - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${MYSQL_DATA_SAVE_PATH}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"

### Networks Setup ############################################

# networks:
#   frontend:
#     driver: "bridge"
#   backend:
#     driver: "bridge"

# volumes:
#   mysql:
#     driver: "local"